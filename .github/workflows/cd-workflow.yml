name: CD with Gradle and Docker

on:
  push:
    branches:
      - 'dev'
      - 'main'

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: ‚òïÔ∏è set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          server-id: github
          settings-path: ${{ github.workspace }}

      - name: üëèüèª grant execute permission for gradlew
        run: chmod +x gradlew

      - name: üêò build with Gradle (without test)
        run: ./gradlew clean build -x test --stacktrace

      - name: üê≥ Docker build & push
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -f Dockerfile -t ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE }} .
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE }}

      - name: üöÄ deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_KEY }}
          port: ${{ secrets.EC2_PORT }}
          script: |
            DOCKER_USERNAME="${{ secrets.DOCKER_USERNAME }}"
            DOCKER_IMAGE="${{ secrets.DOCKER_IMAGE }}"
            APP_BASE_URL="${{ secrets.APP_BASE_URL }}"
            MYSQL_USER="${{ secrets.MYSQL_USER }}"
            MYSQL_PASSWORD="${{ secrets.MYSQL_PASSWORD }}"
            MYSQL_URL="${{ secrets.MYSQL_URL }}"
            JWT_SECRET="${{ secrets.JWT_SECRET }}"
            JWT_ACCESS_EXPIRATION="${{secrets.JWT_ACCESS_EXPIRATION}}"
            JWT_PHONE_EXPIRATION="${{secrets.JWT_PHONE_EXPIRATION}}"
            JWT_REFRESH_EXPIRATION_DAYS="${{secrets.JWT_REFRESH_EXPIRATION_DAYS}}"
            REDIS_HOST="${{ secrets.REDIS_HOST }}"
            REDIS_PORT="${{ secrets.REDIS_PORT }}"
            SMS_KEY="${{ secrets.SMS_KEY }}"
            SMS_NUMBER="${{ secrets.SMS_NUMBER }}"
            SMS_SECRET="${{ secrets.SMS_SECRET }}"
            CARE_CALL_URL="${{ secrets.CARE_CALL_URL }}"
            OPENAI_API_KEY="${{ secrets.OPENAI_API_KEY }}"
            OPENAI_API_URL="${{ secrets.OPENAI_API_URL }}"
            OPENAI_API_MODEL="${{ secrets.OPENAI_API_MODEL }}"
            NAVERPAY_CLIENT_ID="${{ secrets.NAVERPAY_CLIENT_ID }}"
            NAVERPAY_CLIENT_SECRET="${{ secrets.NAVERPAY_CLIENT_SECRET }}"
            NAVERPAY_CHAIN_ID="${{ secrets.NAVERPAY_CHAIN_ID }}"
            NAVERPAY_PARTNER_ID="${{ secrets.NAVERPAY_PARTNER_ID }}"
            NAVERPAY_API_URL="${{ secrets.NAVERPAY_API_URL }}"
            NAVERPAY_SDK_MODE="${{ secrets.NAVERPAY_SDK_MODE }}"


            echo "‚úãüèª Stopping existing container"
            sudo docker stop medicare-call || true
            sudo docker rm medicare-call || true

            echo "üì¶ Current containers:"
            sudo docker ps -a

            echo "ü•≥ Pulling new image"
            sudo docker pull ${DOCKER_USERNAME}/${DOCKER_IMAGE}

            echo "Ïù¥ÎØ∏ÏßÄÎ™Ö: ${DOCKER_USERNAME}/${DOCKER_IMAGE}"

            echo "üå± Running new container"
            sudo docker run -d -p 8000:8080 --name medicare-call \
            -e SPRING_PROFILES_ACTIVE=prod \
            -e APP_BASE_URL="${APP_BASE_URL}" \
            -e MYSQL_USER="${MYSQL_USER}" \
            -e MYSQL_PASSWORD="${MYSQL_PASSWORD}" \
            -e MYSQL_URL="${MYSQL_URL}" \
            -e JWT_SECRET="${JWT_SECRET}" \
            -e JWT_ACCESS_EXPIRATION="${JWT_ACCESS_EXPIRATION}" \
            -e JWT_PHONE_EXPIRATION="${JWT_PHONE_EXPIRATION}" \
            -e JWT_REFRESH_EXPIRATION_DAYS="${JWT_REFRESH_EXPIRATION_DAYS}" \
            -e REDIS_HOST="${REDIS_HOST}" \
            -e REDIS_PORT="${REDIS_PORT}" \
            -e SMS_KEY="${SMS_KEY}" \
            -e SMS_NUMBER="${SMS_NUMBER}" \
            -e SMS_SECRET="${SMS_SECRET}" \
            -e CARE_CALL_URL="${CARE_CALL_URL}" \
            -e OPENAI_API_KEY="${OPENAI_API_KEY}" \
            -e OPENAI_API_URL="${OPENAI_API_URL}" \
            -e OPENAI_API_MODEL="${OPENAI_API_MODEL}" \
            -e NAVERPAY_CLIENT_ID="{NAVERPAY_CLIENT_ID}" \
            -e NAVERPAY_CLIENT_SECRET="{NAVERPAY_CLIENT_SECRET}" \
            -e NAVERPAY_CHAIN_ID="{NAVERPAY_CHAIN_ID}" \
            -e NAVERPAY_PARTNER_ID="{NAVERPAY_PARTNER_ID}" \
            -e NAVERPAY_API_URL="{NAVERPAY_API_URL}" \
            -e NAVERPAY_SDK_MODE="{NAVERPAY_SDK_MODE}" \
            "${DOCKER_USERNAME}/${DOCKER_IMAGE}"

            echo "‚è≥ Waiting for container to start..."
            sleep 15

            echo "üè• Health check - Container status"
            sudo docker ps | grep medicare-call

            echo "üè• Health check - Application logs"
            sudo docker logs --tail 30 medicare-call

            echo "üè• Health check - Container health status"
            if sudo docker ps | grep medicare-call | grep -q "Up"; then
              echo "‚úÖ Container is running successfully!"
            else
              echo "‚ùå Container failed to start properly!"
              echo "üìã Full container logs:"
              sudo docker logs medicare-call
              exit 1
            fi

            echo "üöÆ Cleaning up old images"
            sudo docker image prune -f

            echo "üéâ Deployment completed successfully!"
